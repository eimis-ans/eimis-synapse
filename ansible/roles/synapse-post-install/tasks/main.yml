---
- name: first user creation - retrieve registration_shared_secret
  shell: "kubectl get secrets matrix-synapse -o jsonpath=\"{$.data.config\\.yaml}\" | base64 -d | yq -r \".registration_shared_secret\""
  register: registration_shared_secret
- name: first user creation - get a nonce
  ansible.builtin.uri:
    url: "https://{{ matrix.server_name }}/_synapse/admin/v1/register"
  register: nonce
- name: first user creation - generate hmac
  ansible.builtin.shell: |
    nonce='{{ nonce.json.nonce }}'
    username='{{ matrix.first_eimis_username }}'
    password='{{ matrix.first_eimis_password }}'
    admin='admin'
    secret='{{ registration_shared_secret.stdout }}'
    
    printf '%s\0%s\0%s\0%s' "$nonce" "$username" "$password" "$admin" |
    openssl sha1 -hmac "$secret" |
    awk '{print $2}'
  register: hmac
- name: first user creation - register user with synapse API and retrieve access-token
  ansible.builtin.uri:
    url: "https://{{ matrix.server_name }}/_synapse/admin/v1/register"
    method: POST
    body: "{{ lookup('template', 'register.json') }}"
    body_format: json
  register: admin_user
  failed_when:
    - admin_user.status!=200
    - admin_user.json.errcode!="M_USER_IN_USE"
#- name: upload files to synapse and retrieve the MXC uri
#  ansible.builtin.uri:
#    url: "https://{{ matrix.server_name }}/_matrix/media/v3/upload?filename=psc_picto.png"
#    #    user: your_username
#    #    password: your_pass
#    method: POST
#    force_basic_auth: true
#    status_code: 201
#    body_format:  form-multipart
#    body:
#      file1:
#        content: text based file content
#        filename: psc_picto.png
#        mime_type: image/png
#  register: mxc
#- name: update synapse config with the MXC uri retrieved