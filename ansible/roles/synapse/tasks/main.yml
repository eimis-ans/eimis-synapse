---
#
# Role used to install a basic Matrix synapse server
# The configuration of the server will be completed later in synapse-extra-config role
#
- name: Postgres database secret for Synapse
  kubernetes.core.k8s:
    state: "{{ absent_or_present }}"
    template: "postgres-secret.yml"

- name: Postgres client secret for Synapse
  kubernetes.core.k8s:
    state: "{{ absent_or_present }}"
    template: "postgres-secret.yml"

- name: Add ananace-charts helm repository
  kubernetes.core.helm_repository:
    name: ananace-charts
    repo_url: "https://ananace.gitlab.io/charts"

- name: matrix-synapse helm chart
  kubernetes.core.helm:
    name: matrix-synapse
    chart_ref: ananace-charts/matrix-synapse
    release_state: "{{ absent_or_present }}"
    release_namespace: default
    release_values:
      synapse:
        strategy:
          type: Recreate
        extraCommands:
          - "cp /etc/matrix-synapse/conf.d/* /synapse/config/conf.d/"
      serverName: "{{ matrix.server_name }}"
      config:
        enableRegistration: true
      postgresql:
        enabled: false
      externalPostgresql:
        host: "{{ matrix.db_host }}"
        port: "{{ matrix.db_port }}"
        database: "{{ matrix.db_instance_name }}"
        username: "{{ matrix.db_user }}"
#        password: synapse
        ## The name of an existing secret with postgresql credentials
        existingSecret: postgres-secrets
        ## Password key to be retrieved from existing secret
        existingSecretPasswordKey: postgres-password


#        database:
#          name: psycopg2
#          txn_limit: 10000
#          args:
#            user: "{{ matrix.db_user }}"
#            password: "{{ matrix.db_password }}"
#            database: "{{ matrix.db_instance_name }}"
#            host: "{{ matrix.db_host }}"
#            port: "{{ matrix.db_port }}"
#            cp_min: 5
#            cp_max: 10
      ingress:
        className: nginx
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-prod"
          external-dns.alpha.kubernetes.io/hostname: "{{ matrix.server_name }}"
        tls:
          - hosts:
              - "{{ matrix.server_name }}"
            secretName: "matrix-tls-secret"
      wellknown:
        enabled: true
      extraConfig:
        allow_public_rooms_over_federation: true
        enable_registration_without_verification: false
        registrations_require_3pid:
          - email
        email:
          smtp_host: "{{ matrix.smtp_host }}"
          # FIXME smtp_port set with ansible variable is consider as string and not int
          # smtp_port: "{{ matrix.smtp_port }}"
          smtp_port: 587
          smtp_user: "{{ matrix.smtp_user }}"
          smtp_pass: "{{ matrix.smtp_pass }}"
          notif_from: "Your Friendly %(app)s homeserver <noreply@{{ matrix.server_name }}>"
    update_repo_cache: yes

- name: wait for the matrix-synapse replicaset to be ready
  shell: 'kubectl get deployments.apps matrix-synapse -o jsonpath="{$.status.conditions}" |jq ''.[] | select(.reason | test("NewReplicaSetAvailable")).message'''
  register: rs_message
  until: rs_message.stdout.find("successfully") != -1
  retries: 30
  delay: 5
  when: absent_or_present=="present"

- name: Wait for the synapse instance to be up and running
  ansible.builtin.uri:
    url: "https://{{ matrix.server_name }}/_matrix/static/"
    method: GET
  register: synapse_ping
  until: synapse_ping.status==200
  retries: 30
  delay: 5
  when: absent_or_present=="present"
