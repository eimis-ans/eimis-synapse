---
apiVersion: v1
kind: ConfigMap
metadata:
  name: matrix-synapse-extraconfig
  namespace: default
data:
  extraconfig.yaml: |
{% if discovery_room_id is defined %}
    # Those rooms will be hidden from users
    exclude_rooms_from_sync:
    - "{{ discovery_room_id }}"
{% endif %}
    sso:
      client_whitelist:
        - https://{{ element.server_name }}/
        - element://connect
    oidc_providers:
      - idp_id: keycloak
        idp_name: "EIMIS Connect"
        idp_icon: "{{ mxc_eimis_connect.stdout }}"
        issuer: "https://{{ keycloak.server_name }}/realms/eimis-realm"
        client_id: "{{ keycloak.client_id }}"
        client_secret: "{{ keycloak.client_secret }}"
        scopes: ["openid", "profile"]
        user_mapping_provider:
          config:
            localpart_template: "{% raw %}{{ user.preferred_username }}{% endraw %}"
            display_name_template: "{% raw %}{{ user.given_name }} {{ user.family_name }}{% endraw %}"
            email_template: "{% raw %}{{ user.email }}{% endraw %}"
        backchannel_logout_enabled: true # Optional
{% if prosante_connect.enabled  %}
      - idp_id: psc
        idp_name: "Pro Sant√© Connect"
        idp_icon: "{{ mxc_psc.stdout }}"
        discover: false
        issuer: "{{ prosante_connect.issuer }}"
        authorization_endpoint: "{{ prosante_connect.authorization_endpoint }}"
        token_endpoint: "{{ prosante_connect.token_endpoint }}"
        userinfo_endpoint: "{{ prosante_connect.userinfo_endpoint }}"
        jwks_uri: "{{ prosante_connect.jwks_uri }}"
        client_id: "{{ prosante_connect.client_id }}"
        client_secret: "{{ prosante_connect.client_secret }}"
        scopes: ["openid", "scope_all"]
        user_profile_method: userinfo_endpoint
        user_mapping_provider:
          module: synapse.psc-mapping-provider.ProsanteConnectMappingProvider
          config:
            localpart_template: "{% raw %}{{ user.preferred_username }}{% endraw %}"
            display_name_template: "{% raw %}{{ user.given_name }} {{ user.family_name }}{% endraw %}"
            email_template: "{% raw %}{{ user.email }}{% endraw %}"
        backchannel_logout_enabled: true # Optional
{% endif %}
{% if matrix.servers_list is defined %}
    federation_domain_whitelist: {{ matrix.servers_list }}
{% endif %}
    media_storage_providers:
      - module: s3_storage_provider.S3StorageProviderBackend
        store_local: True
        store_remote: True
        store_synchronous: True
        config:
          bucket: {{ matrix.s3_media_repo.bucket_name }}
          # All of the below options are optional, for use with non-AWS S3-like
          # services, or to specify access tokens here instead of some external method.
          region_name: {{ matrix.s3_media_repo.region }}
          endpoint_url:  {{ matrix.s3_media_repo.url }}
          access_key_id: {{ matrix.s3_media_repo.access_key }}
          secret_access_key: {{ matrix.s3_media_repo.secret_key }}
